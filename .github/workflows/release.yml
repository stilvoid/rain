on:
  push:
    tags:
    - 'v*'

name: Create release from tag

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    container: golang:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build
        run: |
          platforms=(linux/amd64 linux/386 linux/arm darwin/amd64 windows/ams64 windows/386)

          for platform in "${platforms[@]}"; do
              os="${platform%/*}"
              arch="${platform#*/}"
              name="rain-${GITHUB_REF##*/}_${os}-${arch}"

              echo "Building for $platform"

              mkdir -p "dist/${name}"

              GOOS="$os" GOARCH="$arch" go build -ldflags=-w -o "dist/${name}/" ./cmd/rain

              cp LICENSE "dist/${name}/"
              cp README.md "dist/${name}/"

              cd dist || exit
              zip -9 -r "${name}.zip" "$name"
              rm -r "$name"
              cd - || exit
          done

      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ./dist/*.zip

  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - run: |
          set -x
          (echo ${GITHUB_REF##*/}; echo; git cherry -v $(git describe --abbrev=0 HEAD^) | cut -d" " -f3-) > CHANGELOG
          assets=()
          for zip in ./dist/*.zip; do
            assets+=("-a" "$zip")
          done
          hub release create "${assets[@]}" -F CHANGELOG "${GITHUB_REF##*/}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
